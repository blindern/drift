---
update:
  group: stable

locksmith:
  window_start: Sun 1:00
  window_length: 2h

etcd:
  advertise_client_urls: "http://{PRIVATE_IPV4}:2379"
  initial_advertise_peer_urls: "http://{PRIVATE_IPV4}:2380"
  listen_client_urls: "http://0.0.0.0:2379"
  listen_peer_urls: "http://{PRIVATE_IPV4}:2380"
  initial_cluster: coreos-1=http://coreos-1.zt.foreningenbs.no
  #initial_cluster_state: existing
  initial_cluster_state: new

passwd:
  users:
    - name: core
      ssh_authorized_keys:
        # Note this is in addition to the ones added in blindern.tf.
        # We keep one key in blindern.tf, as otherwise it will cause the unit
        # coreos-metadata-sshkeys@core.service to fail.
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPHEXfnk4idh16KHKe3GHpHRpNlXxCaY/zGO9VFTZODMlvQoAy1jEXpJUFVEXrayiFeQ5owArSa3GiYlvMW9e72dRf+w9l1jpnPMM+0BoZEluZX/DceOd3DLSMcCg5Z9LKZbYDwe94erZBtGuWSAEd8ue+bkSkBhbQdJyPlU36e2i2+WoIVroZjPzemoKXICMNEKXhHzewivpEC88pCSoQKjHz42vTplkB60D/TgdZriOZbs0JL60mxOyNLje9dK81npVy8+YpfCLae3yw3hY8W4OsFnZ9z+MLxBJVQnblrc/tE9mgq3BAKQOBi7RY6vdgr3aMbmkRCnUn0JlYkh/h henrist@henrist.net"
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDtfAWMVFNB+fcjipU/ex7cK85q/CdJsljcpO7O0XilhmnMDr0aw+F6ESPYahcuWFKUXLZ8vzXw4TRHaHd08eW4NvpTFaPzHlD4wkaW9ozj+0YAedFG4xfqFj/OCSSyNDGv4t/YeXZ0X6ylLhRaTcgQ4RGoT19sdS4Ddsb0KHVBlWI62IAATDyA4SNjCng9iYzH+Kw8sf7xQVsU1Y8XUiHZLOXmPOmd6FVN5ngpYHisiIoxi9tASIN0aMKtZHkDLKdXaCpSr72siY1JB4sBcv02dIAix9ENVoJF04CYAaJkkggY8K9SBUGawx+xjqtD5VfkA3phyJJP1LQSwk4nbFsR henrist@henrist.net"
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDqBxtHvi71XA1T9R2q8TpkuM3su7FGfHQ7MwP/8Dpn6V3IKVAw4KCCo9pnxWt8M9TdXyZ3fOQ/zB5rid0w1BuvhQ+b/QeBpnnzqPyhRFHX4PZncCInFf+aspJ9jM8f6Iwa9/v6FBbbtawNo5VMtDV8U8j0RNI/JPtkad3x1eVQL0hA9uj+WXQ0fFpnq8l3kCQztR0n60GOC63f4uRH0B8nyrq/FXw9WpxjO7FMuDzHFfYGMTixamw4TxYhDfnQHByX1ac153Fy1Cu+DQSXQ09z4ak7G+oGFNo4e61IUF4CqZkAKhL5AVpCHtT+m++RsP04sK6phOJF7cVl6492r/A5 circleci"

storage:
  filesystems:
    - name: volume1
      mount:
        device: /dev/vdb
        format: ext4
  files:
    ##
    # host keys
    - filesystem: root
      mode: 0600
      contents:
        local: host-keys/ssh_host_dsa_key
      path: /etc/ssh/ssh_host_dsa_key
    - filesystem: root
      mode: 0644
      contents:
        local: host-keys/ssh_host_dsa_key.pub
      path: /etc/ssh/ssh_host_dsa_key.pub
    - filesystem: root
      mode: 0600
      contents:
        local: host-keys/ssh_host_ecdsa_key
      path: /etc/ssh/ssh_host_ecdsa_key
    - filesystem: root
      mode: 0644
      contents:
        local: host-keys/ssh_host_ecdsa_key.pub
      path: /etc/ssh/ssh_host_ecdsa_key.pub
    - filesystem: root
      mode: 0600
      contents:
        local: host-keys/ssh_host_ed25519_key
      path: /etc/ssh/ssh_host_ed25519_key
    - filesystem: root
      mode: 0644
      contents:
        local: host-keys/ssh_host_ed25519_key.pub
      path: /etc/ssh/ssh_host_ed25519_key.pub
    - filesystem: root
      mode: 0600
      contents:
        local: host-keys/ssh_host_rsa_key
      path: /etc/ssh/ssh_host_rsa_key
    - filesystem: root
      mode: 0644
      contents:
        local: host-keys/ssh_host_rsa_key.pub
      path: /etc/ssh/ssh_host_rsa_key.pub
    # end host keys

    - filesystem: root
      mode: 0600
      contents:
        local: dyndns.key
      path: /etc/dyndns.key

    - filesystem: root
      mode: 0755
      contents:
        inline: |
          #!/bin/bash -e

          root="$(git rev-parse --show-toplevel)"
          relative="$(realpath --relative-to="$root" .)"

          exec docker run \
            -u $(id -u):$(id -g) \
            -it \
            -w "/repo/$relative" \
            -v "$root":/repo quay.io/lukebond/git-crypt:v1.0.0 \
            "$@"
      path: /opt/bin/git-crypt

networkd:
  units:
    - name: 50-zerotier.network
      contents: |
        [Match]
        Name=zt*

        [Link]
        Unmanaged=yes

systemd:
  units:
    - name: data.mount
      enable: true
      contents: |
        [Unit]
        Description=Mount volume to /data
        Before=local-fs.target

        [Mount]
        What=/dev/vdb
        Where=/data
        Type=ext4

        [Install]
        WantedBy=local-fs.target
    - name: set-data-owner.service
      enable: yes
      contents: |
        [Unit]
        Description=Ensure core:core owns /data
        After=data.mount

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/chown core:core /data

        [Install]
        WantedBy=multi-user.target
    - name: dyndns.service
      contents: |
        [Unit]
        Description=DynDNS

        [Service]
        Type=oneshot
        ExecStart=/bin/sh -c '/usr/bin/wget --no-cache --spider -q "https://hsw.no/iplog/fbs-coreos-1?key=$(cat /etc/dyndns.key)"'
    - name: dyndns.timer
      enable: true
      contents: |
        [Unit]
        Description=DynDNS

        [Timer]
        OnCalendar=*:0/5
        OnBootSec=15

        [Install]
        WantedBy=multi-user.target
    - name: install-docker-compose.service
      enable: yes
      contents: |
        [Unit]
        Description=Install docker-compose
        ConditionPathExists=!/opt/bin/docker-compose
        After=network-online.target

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/mkdir -p /opt/bin/
        ExecStart=/usr/bin/curl -o /opt/bin/docker-compose -sL "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-Linux-x86_64"
        ExecStart=/usr/bin/chmod +x /opt/bin/docker-compose

        [Install]
        WantedBy=multi-user.target
    - name: zerotier-one.service
      enable: yes
      contents: |
        [Unit]
        Description=MyApp
        After=docker.service
        Requires=docker.service

        [Service]
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill zerotier-one
        ExecStartPre=-/usr/bin/docker rm -f zerotier-one
        ExecStartPre=/usr/bin/docker pull henrist/zerotier-one
        ExecStart=/usr/bin/docker run --name zerotier-one --device /dev/net/tun --net host --cap-add NET_ADMIN --cap-add SYS_ADMIN -v /data/zerotier-one:/var/lib/zerotier-one henrist/zerotier-one
        Restart=on-failure
        KillMode=process

        [Install]
        WantedBy=multi-user.target
    - name: zerotier-one-join-foreningenbs.service
      enable: yes
      contents: |
        [Unit]
        Description=Join ZeroTier network (must be manually approved on https://my.zerotier.com/network/a84ac5c10a9c7522)
        ConditionPathExists=!/data/zerotier-one/networks.d/a84ac5c10a9c7522.conf
        After=zerotier-one.service
        Requires=zerotier-one.service

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/docker exec zerotier-one zerotier-cli join a84ac5c10a9c7522

        [Install]
        WantedBy=multi-user.target
