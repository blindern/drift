- name: Create a /var/ansible/snipeit directory if not exisiting
  ansible.builtin.file:
    path: /var/ansible/snipeit
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Copy env file
  ansible.builtin.copy:
    dest: /var/ansible/snipeit/.env
    src: snipe-it-env
    owner: root
    group: root
    mode: 0644

- name: download and start mysql
  community.docker.docker_container:
    name: snipe-mysql
    state: started
    image: "{{ snipe_mysql_image }}"
    pull: true
    env_file: /var/ansible/snipeit/.env
    volumes:
      - /var/mnt/data/snipesql-vol:/var/lib/mysql:Z
    networks:
      - name: fbs0
        ipv4_address: "{{ snipe_mysql_ipv4_address }}"
    networks_cli_compatible: yes
    restart_policy: unless-stopped
  when: not ansible_check_mode

- name: download and start snipeit
  community.docker.docker_container:
    name: snipeit
    state: started
    image: "{{ snipeit_image }}"
    pull: true
#    links: snipe-mysql:mysql
#    ports: 8000:80
    env_file: /var/ansible/snipeit/.env
    volumes:
      - /var/mnt/data/snipe-vol:/var/lib/snipeit:Z
    networks:
      - name: fbs0
        ipv4_address: "{{ snipeit_ipv4_address }}"
    networks_cli_compatible: yes
    restart_policy: unless-stopped
  when: not ansible_check_mode
    
- name: Change permissions of snipeit containers storage directory
  community.docker.docker_container_exec:
    container: snipeit
    argv:
      - /bin/bash
      - "-c"
      - "chown -R docker:root storage"
    chdir: /var/www/html
  when: not ansible_check_mode
